{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://nextflow.io",
  "title": "Nextflow Schema Meta-schema",
  "description": "Meta-schema to validate Nextflow parameter schema files",
  "type": "object",
  "properties": {
    "$schema": {
      "title": "schema",
      "type": "string",
      "minLength": 1
    },
    "$id": {
      "title": "ID URI",
      "type": "string",
      "minLength": 1
    },
    "title": {
      "title": "Title",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "title": "Description",
      "type": "string",
      "minLength": 1
    },
    "type": {
      "title": "Top level type",
      "type": "string",
      "const": "object"
    },
    "definitions": {
      "title": "Parameter groups",
      "type": "object",
      "patternProperties": {
        "^.*$": {
          "type": "object",
          "required": [
            "title",
            "type",
            "properties"
          ],
          "properties": {
            "title": {
              "type": "string",
              "minLength": 1
            },
            "type": {
              "const": "object"
            },
            "fa_icon": {
              "type": "string",
              "pattern": "^fa"
            },
            "description": {
              "type": "string"
            },
            "required": {
              "type": "array"
            },
            "properties": {
              "type": "object",
              "patternProperties": {
                "^.*$": {
                  "$ref": "#/$defs/parameter"
                }
              }
            }
          }
        }
      }
    },
    "allOf": {
      "title": "Combine definition groups",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^#/definitions/"
          }
        }
      }
    }
  },
  "required": [
    "$schema",
    "$id",
    "title",
    "description",
    "type"
  ],
  "$defs": {
    "base-parameter": {
      "type": "object",
      "required": [ "type" ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "boolean",
            "integer",
            "number"
          ]
        },
        "description": {
          "type": "string"
        },
        "help_text": {
          "type": "string"
        },
        "fa_icon": {
          "type": "string",
          "pattern": "^fa"
        },
        "errorMessage": {
          "type": "string",
          "minLength": 1
        },
        "hidden": {
          "type": "boolean"
        }
      }
    },
    "boolean-parameter": {
      "properties": {
        "type": {
          "const": "boolean"
        },
        "default": {
          "type": [ "boolean", "null" ]
        }
      }
    },
    "integer-parameter": {
      "properties": {
        "type": {
          "const": "integer"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "minimum": {
          "type": "integer"
        },
        "maximum": {
          "type": "integer"
        },
        "exclusiveMinimum": {
          "type": "integer"
        },
        "exclusiveMaximum": {
          "type": "integer"
        },
        "default": {
          "type": ["integer", "null" ]
        }
      }
    },
    "number-parameter": {
      "type": "object",
      "properties": {
        "type": {
          "const": "number"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "number"
        },
        "default": {
          "type": ["number", "null" ]
        }
      }
    },
    "string-parameter": {
      "type": "object",
      "properties": {
        "type": {
          "const": "string"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minLength": {
          "type": "integer"
        },
        "maxLength": {
          "type": "integer"
        },
        "default": {
          "type": ["string", "null" ]
        },
        "pattern": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "path-parameter": {
      "type": "object",
      "properties": {
        "type": { "const": "string" },
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "format": {
          "type": "string",
          "enum": [
            "file-path",
            "directory-path",
            "path",
            "file-path-pattern"
          ]
        },
        "default": {
          "type": ["string", "null" ]
        },
        "exists": {
          "type": ["boolean", "null" ]
        }
      }
    },
    "file-path-parameter": {
      "allOf": [
        { "$ref": "#/$defs/path-parameter"},
        {
          "type": "object",
          "properties": {
            "mimetype": {
              "type": "string",
              "pattern": ".+/.+"
            },
            "schema": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      ]
    },
    "parameter": {
      "type": "object",
      "unevaluatedProperties": false,
      "allOf": [
        {
          "$ref": "#/$defs/base-parameter"
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "boolean"
              }
            }
          },
          "then": {
            "$ref": "#/$defs/boolean-parameter"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "integer"
              }
            }
          },
          "then": {
            "$ref": "#/$defs/integer-parameter"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "number"
              }
            }
          },
          "then": {
            "$ref": "#/$defs/number-parameter"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "string"
              }
            }
          },
          "then": {
            "$ref": "#/$defs/string-parameter"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "string"
              }
            }
          },
          "then": {
            "$ref": "#/$defs/string-parameter"
          }
        },
        {
          "if": {
            "required": [ "format" ],
            "properties": {
              "type": {
                "const": "string"
              }
            }
          },
          "then": {
            "if": {
              "properties": {
                "format": { "const": "file-path" }
              }
            },
            "then": {
              "$ref": "#/$defs/file-path-parameter"
            },
            "else": {
              "$ref": "#/$defs/path-parameter"
            }
          }
        }
      ]
    }
  }
}